{"name":"Pml-assignment","tagline":"","body":"# Course project report\r\n\r\n## Load dataset\r\n\r\n```{r}\r\nlibrary(caret)\r\ndataset <- read.csv(\"./pml-training.csv\")\r\n```\r\n\r\n## Plot and analyze predictors\r\n\r\n```{r}\r\nnames(dataset)\r\nsummary(dataset)\r\nplot(dataset$roll_arm)\r\nqplot(roll_arm, roll_belt, colour = classe,data = dataset)\r\n```\r\n\r\n### Remove near-zero variables, non predictor variables, â€¦.\r\n\r\n```{r}\r\ndataselect <- names(dataset[,-c(1:7,12:36,50:59,69:83,87:94,95:98,99:101,103:115,125:139,141:150)])\r\nadataset <- dataset[,dataselect]; names(adataset)\r\n```\r\n\r\nBelow are selected predictors:\r\n\r\n[1] \"roll_belt\"            \"pitch_belt\"           \"yaw_belt\"            \r\n[4] \"total_accel_belt\"     \"gyros_belt_x\"         \"gyros_belt_y\"        \r\n[7] \"gyros_belt_z\"         \"accel_belt_x\"         \"accel_belt_y\"        \r\n[10] \"accel_belt_z\"         \"magnet_belt_x\"        \"magnet_belt_y\"       \r\n[13] \"magnet_belt_z\"        \"roll_arm\"             \"pitch_arm\"           \r\n[16] \"yaw_arm\"              \"total_accel_arm\"      \"gyros_arm_x\"         \r\n[19] \"gyros_arm_y\"          \"gyros_arm_z\"          \"accel_arm_x\"         \r\n[22] \"accel_arm_y\"          \"accel_arm_z\"          \"magnet_arm_x\"        \r\n[25] \"magnet_arm_y\"         \"magnet_arm_z\"         \"roll_dumbbell\"       \r\n[28] \"pitch_dumbbell\"       \"yaw_dumbbell\"         \"total_accel_dumbbell\" \r\n[31] \"accel_dumbbell_x\"     \"accel_dumbbell_y\"     \"accel_dumbbell_z\"    \r\n[34] \"magnet_dumbbell_x\"    \"magnet_dumbbell_y\"    \"magnet_dumbbell_z\"   \r\n[37] \"roll_forearm\"         \"pitch_forearm\"        \"yaw_forearm\"         \r\n[40] \"total_accel_forearm\"  \"gyros_forearm_x\"      \"gyros_forearm_y\"     \r\n[43] \"gyros_forearm_z\"      \"accel_forearm_x\"      \"accel_forearm_y\"     \r\n[46] \"accel_forearm_z\"      \"magnet_forearm_x\"     \"magnet_forearm_y\"    \r\n[49] \"magnet_forearm_z\"     \"classe\"              \r\n\r\n\r\n## Fit a random forest model with cross-validation\r\n\r\n```{r}\r\ntc <- trainControl(method=\"repeatedcv\", number=10, repeats=10, classProbs = TRUE)\r\nset.seed(13568);  rfModFit <- train(classe ~ ., data= adataset, method=\"rf\", trControl=tc, ntree=10)\r\n```\r\n\r\n\r\n## Analyze model accuracy\r\n\r\n```{r}\r\nrfModFit\r\nconfusionMatrix(rfModFit)\r\n```\r\n\r\nRandom Forest \r\n\r\n19622 samples\r\n   49 predictors\r\n    5 classes: 'A', 'B', 'C', 'D', 'E' \r\n\r\nNo pre-processing\r\nResampling: Cross-Validated (10 fold, repeated 10 times) \r\n\r\nSummary of sample sizes: 17660, 17659, 17661, 17660, 17660, 17659, ... \r\n\r\nResampling results across tuning parameters:\r\n\r\n  mtry  Accuracy  Kappa  Accuracy SD  Kappa SD\r\n  2     0.985     0.981  0.00291      0.00369 \r\n  25    **0.991**     0.989  0.00234      0.00296 \r\n  49    0.985     0.981  0.00337      0.00426 \r\n\r\nAccuracy was used to select the optimal model using  the largest value.\r\nThe final value used for the model was mtry = 25. \r\n\r\nCross-Validated (10 fold, repeated 10 times) Confusion Matrix \r\n\r\n(entries are percentages of table totals)\r\n\r\n          Reference\r\nPrediction    A    B    C    D    E\r\n         A 28.4  0.2  0.0  0.0  0.0\r\n         B  0.0 19.1  0.1  0.0  0.0\r\n         C  0.0  0.1 17.2  0.2  0.0\r\n         D  0.0  0.0  0.1 16.1  0.1\r\n         E  0.0  0.0  0.0  0.0 18.3\r\n\r\n\r\n### OOB estimate\r\n\r\n```{r}\r\nrfModFit$finalModel\r\n```\r\n\r\nCall:\r\nrandomForest(x = x, y = y, ntree = 10, mtry = param$mtry) \r\n               Type of random forest: classification\r\n                     Number of trees: 10\r\nNo. of variables tried at each split: 25\r\n\r\n        **OOB estimate of  error rate: 2.59%**\r\nConfusion matrix:\r\n     A    B    C    D    E class.error\r\nA 5488   18    8    5    6 0.006696833\r\nB   77 3622   40   11   15 0.037981408\r\nC    6   66 3278   38    4 0.033608491\r\nD   12   17   73 3071   12 0.035792779\r\nE    4   38   24   29 3482 0.026558569\r\n\r\n\r\n### Look at variable importance\r\n\r\n```{r}\r\nvarImp(rfModFit)\r\nvarImpPlot(rfModFit$finalModel)\r\n```\r\n\r\nrf variable importance\r\n\r\n  only 20 most important variables shown (out of 49)\r\n\r\n                     Overall\r\nroll_belt             100.00\r\npitch_forearm          62.99\r\npitch_belt             56.50\r\nyaw_belt               54.89\r\nmagnet_dumbbell_y      47.80\r\nmagnet_dumbbell_z      44.39\r\nroll_forearm           38.69\r\naccel_dumbbell_y       26.47\r\nmagnet_dumbbell_x      20.49\r\naccel_forearm_x        18.81\r\nmagnet_forearm_z       18.70\r\naccel_belt_z           18.19\r\nroll_dumbbell          16.61\r\nmagnet_belt_z          15.03\r\naccel_dumbbell_z       13.56\r\ntotal_accel_dumbbell   13.51\r\ngyros_belt_z           13.49\r\nroll_arm               12.67\r\nyaw_arm                12.41\r\nmagnet_arm_x           11.05\r\n\r\n\r\n### Compute in band accuracy\r\n\r\n```{r}\r\nconfusionMatrix(adataset$classe, predict(rfModFit, newdata=adataset))\r\n```\r\n\r\nConfusion Matrix and Statistics\r\n\r\n          Reference\r\nPrediction    A    B    C    D    E\r\n         A 5580    0    0    0    0\r\n         B    2 3794    1    0    0\r\n         C    0    0 3422    0    0\r\n         D    0    0    0 3216    0\r\n         E    0    0    0    0 3607\r\n\r\nOverall Statistics\r\n                                     \r\n               Accuracy : 0.9998     \r\n                 95% CI : (0.9996, 1)\r\n    No Information Rate : 0.2845     \r\n    P-Value [Acc > NIR] : < 2.2e-16  \r\n                                     \r\n                  Kappa : 0.9998     \r\n Mcnemar's Test P-Value : NA         \r\n\r\nStatistics by Class:\r\n\r\n                     Class: A Class: B Class: C Class: D Class: E\r\nSensitivity            0.9996   1.0000   0.9997   1.0000   1.0000\r\nSpecificity            1.0000   0.9998   1.0000   1.0000   1.0000\r\nPos Pred Value         1.0000   0.9992   1.0000   1.0000   1.0000\r\nNeg Pred Value         0.9999   1.0000   0.9999   1.0000   1.0000\r\nPrevalence             0.2845   0.1934   0.1744   0.1639   0.1838\r\nDetection Rate         0.2844   0.1934   0.1744   0.1639   0.1838\r\nDetection Prevalence   0.2844   0.1935   0.1744   0.1639   0.1838\r\nBalanced Accuracy      0.9998   0.9999   0.9999   1.0000   1.0000\r\n\r\n\r\n## Predict on new dataset\r\n\r\n```{r}\r\ntesting <- read.csv(\"./pml-testing.csv\")\r\ntestselect <- dataselect[-50]\r\natesting <- testing[,testselect]; names(atesting)\r\natesting$problem_id <- testing$problem_id\r\npredict(rfModFit, newdata=atesting[,-50])\r\n```\r\n\r\n[1] B A B A A E D B A A B C B A E E A B B B\r\nLevels: A B C D E\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}